ビューをいくつか作成する
１．質問"インデックス"ページ：最新の質問をいくつか表示
２．質問"詳細"ページ：結果を表示せず、質問テキストと投票フォームを表示
３．質問"結果"ページ：特定の質問の結果を表示
４．投票ページ：特定の質問の選択を投票として受付
各ページとコンテンツはビューによって提供される。
各ビューはPython関数として実装されている。
ビューはURLから決定される（ドメイン以降の部分）
URLconfを使ってURLからビューを得るらしい。

Djangoのリクエスト処理
実験成功です。何をしたかというと、
空欄、ですね、つまり、その、http://127.0.0.1:8000 がエラーページになってるのをどうにかしたかったわけ。
どうしたかというと、まずmysiteのurls.pyで、
from . import views
urlpatternsに path('', views.hello, name = 'hello') を追加。
これによって・・んで、同じところにviews.pyファイルを作り、（mysiteの中に）
その中に
from django.http import HttpResponse
def hello(request):
    return HttpResponse("Hello world.")
と書いただけ。これでディスパッチャが何をするかというと、
まず最初にurlpatternsを順に見ていって、最初にヒットするのが http://127.0.0.1:8000 のあとに何もない
path('', ...)
だからそれで、次に、2つ目の引数、ビュー関数が、これはviews.だと同じディレクトリのviews.pyに書かれた
関数の呼び出しになるんだけど、そこにHttpResponse何とかって書いてあってそれが呼ばれる仕組みみたいです。
ビューに送られる引数：HttpRequestのインスタンス（requestという名前の変数がそれ）（中身は現時点では不明・・）
include(polls.urls)とかすると、polls/以降の処理をpollsの方のurls.pyにさせることができる。

新しいビュー関数を3つ追加
def detail(request, question_id): ...
def results(request, question_id): ...
def vote(request, question_id): ...
これをpollsのurls.pyから呼び出すために、urls.pyにpathを記述する。
path('<int:question_id>/', views.detail, name = 'detail'),
path('<int:question_id>/results/', views.results, name = 'results'),
path('<int:question_id>/vote/', views.vote, name = 'vote'),
これで各々のビュー関数が呼ばれる、<int:~~~>はint型の引数を渡す、みたいな意味。

ビュー関数の役割は、HttpResponseオブジェクトを送出するか、例外を送出するか。それだけ。

indexビューに味を付けたい
今のところ文字だけなので・・・
データベースを使って、直近の5つの質問を表示するページを作ってみたい。
from .models import Question
Djangoのテンプレートシステムを使う。
まず、pollsの中にtemplatesディレクトリを作成する。Djangoはこの中からhtmlのテンプレートを探す。
templatesの中にpollsフォルダを作り、その中にindex.htmlを作ると、
それが呼び出される仕組みになってる。
とりあえず適当にhtmlになんか書いて、それを表示させてみる。

django.templateからloaderという関数をimportする。これは、get_templateという
関数を持っていて、引数にtemplatesフォルダ以下のhtmlの居場所を教えるとそれを呼び出してくれるみたい。
あとはそれをrender()すれば無事htmlが表示される。
renderには引数が取れるみたい。この後それを使ってデータベースの中身を取り出す操作を行う。

次の課題：http://127.0.0.1:8000 でhtmlが呼び出されるようにtemplate使ってなんか、どうにかする。
